## Sudoers allows particular users to run various commands as
## the root user, without needing the root password.
##
## Examples are provided at the bottom of the file for collections
## of related commands, which can then be delegated out to particular
## users or groups.
##
## This file must be edited with the 'visudo' command.

## Host Aliases
## Groups of machines. You may prefer to use hostnames (perhaps using
## wildcards for entire domains) or IP addresses instead.
# Host_Alias     FILESERVERS = fs1, fs2
# Host_Alias     MAILSERVERS = smtp, smtp2

# AIDEPLOY AND GPUSERVERS are generated from ansible (vars/main.yml)


## User Aliases
## These aren't often necessary, as you can use regular groups
## (ie, from files, LDAP, NIS, etc) in this file - just use %groupname
## rather than USERALIAS
# User_Alias ADMINS = jsmith, mikem

# Disable "ssh hostname sudo <cmd>", because it will show the password in clear.
#         You have to run "ssh -t hostname sudo <cmd>".
#
Defaults    requiretty

# Refuse to run if unable to disable echo on the tty. This setting should also be
# changed in order to be able to use sudo without a tty. See requiretty above.
#
Defaults   !visiblepw

#
# Preserving HOME has security implications since many programs
# use it when searching for configuration files. Note that HOME
# is already set when the the env_reset option is enabled, so
# this option is only effective for configurations where either
# env_reset is disabled or HOME is present in the env_keep list.
#
Defaults    always_set_home

Defaults    env_reset
Defaults    env_keep =  "COLORS DISPLAY HOSTNAME HISTSIZE INPUTRC KDEDIR LS_COLORS"
Defaults    env_keep += "MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE"
Defaults    env_keep += "LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES"
Defaults    env_keep += "LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE"
Defaults    env_keep += "LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY"

#
# Adding HOME to env_keep may enable a user to run unrestricted
# commands via sudo.
#
# Defaults   env_keep += "HOME"

Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin

## Next comes the main part: which users can run what software on
## which machines (the sudoers file can be shared between multiple
## systems).
## Syntax:
##
## 	user	MACHINE=COMMANDS
##
## The COMMANDS section may have other options added to it.
##
## Allow root to run any commands anywhere
root	ALL=(ALL) 	NOPASSWD: ALL

## Allows people in group wheel to run all commands (we might have this in places)
%wheel ALL=(ALL) NOPASSWD: ALL

## allow all members of group "operations" full sudo.
%operations ALL=(ALL) NOPASSWD: ALL

## allow members of machinelearning sudo on thir machines
## AIDEPLOY exists as hostalias above. also GPUSERVERS
##%machinelearning AIDEPLOY=(ALL) NOPASSWD: ALL
##%machinelearning GPUSERVERS=(ALL) NOPASSWD: ALL

## add specific names from operations
{% for user in users %}
{% for group in user.user_groups %}
{% if group == 'operations' %}
{{ user.name }} ALL=(ALL) NOPASSWD: ALL
{% endif %}
{% endfor %}
{% endfor %}

## add users from the ansible yaml and populate this file.
{% for user in users %}
{% if (user.sudo is defined) and user.sudo %}
{% for sudohostname in user.sudo %}
{% if sudohostname != 'all' %}
{{ user.name }}   {{ sudohostname }}=(ALL) NOPASSWD: ALL
{% endif %}
{% endfor%}
{% endif %}
{% endfor %}


## Read drop-in files from /etc/sudoers.d (the # here does not mean a comment)
#includedir /etc/sudoers.d
